# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: RegistryServer.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x14RegistryServer.proto\x12\x0eRegistryServer\".\n\rServerRequest\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0f\n\x07\x61\x64\x64ress\x18\x02 \x01(\t\"\"\n\x0eServerResponse\x12\x10\n\x08response\x18\x01 \x01(\t\"\"\n\rClientRequest\x12\x11\n\tclient_id\x18\x01 \x01(\t\"<\n\nServerList\x12.\n\x07servers\x18\x01 \x03(\x0b\x32\x1d.RegistryServer.ServerRequest\"@\n\x0e\x43lientResponse\x12.\n\nserverList\x18\x01 \x01(\x0b\x32\x1a.RegistryServer.ServerList2\\\n\x0fRegisterService\x12I\n\x08Register\x12\x1d.RegistryServer.ServerRequest\x1a\x1e.RegistryServer.ServerResponse2f\n\x14GetServerListService\x12N\n\rGetServerList\x12\x1d.RegistryServer.ClientRequest\x1a\x1e.RegistryServer.ClientResponseb\x06proto3')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'RegistryServer_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _SERVERREQUEST._serialized_start=40
  _SERVERREQUEST._serialized_end=86
  _SERVERRESPONSE._serialized_start=88
  _SERVERRESPONSE._serialized_end=122
  _CLIENTREQUEST._serialized_start=124
  _CLIENTREQUEST._serialized_end=158
  _SERVERLIST._serialized_start=160
  _SERVERLIST._serialized_end=220
  _CLIENTRESPONSE._serialized_start=222
  _CLIENTRESPONSE._serialized_end=286
  _REGISTERSERVICE._serialized_start=288
  _REGISTERSERVICE._serialized_end=380
  _GETSERVERLISTSERVICE._serialized_start=382
  _GETSERVERLISTSERVICE._serialized_end=484
# @@protoc_insertion_point(module_scope)
